rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read any profile, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    // Users can create recommendations for others, but can't see or delete them.
    match /recommendations/{recommendationId} {
      allow read: if request.auth.uid == resource.data.toUserId;
      allow create: if request.auth.uid == request.resource.data.fromUserId;
      allow delete, update: if false; // Recommendations are read-only once created
    }

    // Users can manage their own watchlists.
    match /watchlists/{watchlistId} {
      allow read, delete, update: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Users can send friend requests and manage incoming ones.
    match /friendRequests/{requestId} {
      allow read: if request.auth.uid == resource.data.toUserId || request.auth.uid == resource.data.fromUserId;
      allow create: if request.auth.uid == request.resource.data.fromUserId;
      allow delete: if request.auth.uid == resource.data.toUserId || request.auth.uid == resource.data.fromUserId;
    }

    // Users can send blend requests and manage incoming ones.
    match /blendRequests/{requestId} {
      allow read: if request.auth.uid == resource.data.toUserId || request.auth.uid == resource.data.fromUserId;
      allow create: if request.auth.uid == request.resource.data.fromUserId;
      allow delete: if request.auth.uid == resource.data.toUserId || request.auth.uid == resource.data.fromUserId;
    }
  }
}
