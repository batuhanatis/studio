rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // USERS
    // Users can:
    // - Create their own user document.
    // - Read their own user document.
    // - Update their own user document (e.g., add friends, rated movies).
    match /users/{userId} {
      allow read, update, delete: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn();
    }

    // FRIEND REQUESTS
    // Users can:
    // - Create a request (send one).
    // - Read requests sent to them or by them.
    // - Update requests sent to them (accept/decline).
    // - Delete requests sent by them.
    match /friendRequests/{requestId} {
      allow read: if isSignedIn() && (resource.data.toUserId == request.auth.uid || resource.data.fromUserId == request.auth.uid);
      allow create: if isSignedIn() && request.resource.data.fromUserId == request.auth.uid;
      allow update, delete: if isSignedIn() && (resource.data.toUserId == request.auth.uid || resource.data.fromUserId == request.auth.uid);
    }

    // WATCHLISTS
    // Users can:
    // - Create, read, update, and delete their own watchlists.
    match /watchlists/{listId} {
      allow read, write: if isSignedIn() && resource.data.userId == request.auth.uid;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }
    
    // RECOMMENDATIONS
    // Users can:
    // - Create a recommendation.
    // - Read recommendations sent to them.
    match /recommendations/{recommendationId} {
       allow read: if isSignedIn() && resource.data.toUserId == request.auth.uid;
       allow create: if isSignedIn() && request.resource.data.fromUserId == request.auth.uid;
    }
  }
}