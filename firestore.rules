rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      // A user document can be created if the incoming data's uid field
      // matches the document ID (userId). This is robust against client-side
      // race conditions where request.auth might not be populated in time
      // immediately after account creation.
      allow create: if request.resource.data.uid == userId;

      // For all other operations, the user must be authenticated and
      // can only access their own document.
      allow read, update, delete: if request.auth.uid == userId;
    }

    match /friendRequests/{requestId} {
      // A user can create a friend request if they are the sender.
      allow create: if request.auth.uid == request.resource.data.fromUserId;

      // A user can update a request (to accept it) if they are the recipient.
      // A user can delete a request if they are the recipient (declining)
      // or the sender (canceling). The sender part of the check is implicit
      // because they can only cancel by deleting, not updating.
      allow update: if request.auth.uid == resource.data.toUserId;
      allow delete: if request.auth.uid == resource.data.toUserId || request.auth.uid == resource.data.fromUserId;

      // Users can only read requests sent to or from them.
      allow read: if request.auth.uid == resource.data.fromUserId || request.auth.uid == resource.data.toUserId;
    }
    
    match /watchlists/{listId} {
        // Anyone can create a watchlist for themselves.
        allow create: if request.auth.uid == request.resource.data.userId;
        
        // Only the owner can read, update, or delete their watchlist.
        allow read, update, delete: if request.auth.uid == resource.data.userId;
    }

    match /recommendations/{recommendationId} {
        // A user can send a recommendation if they are logged in.
        allow create: if request.auth.uid == request.resource.data.fromUserId;

        // Only the recipient can see and delete their recommendations.
        allow read, delete: if request.auth.uid == resource.data.toUserId;
    }
  }
}
