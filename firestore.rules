
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // A user can read another user's profile IF they are friends.
    function areFriends(otherUserId) {
        return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
               get(/databases/$(database)/documents/users/$(request.auth.uid)).data.friends.hasAny([otherUserId])
    }
    
    match /users/{userId} {
      // Allow create for any authenticated user (including anonymous)
      allow create: if isSignedIn();
      
      // Allow read only if it's the owner OR if they are friends.
      allow read: if isOwner(userId) || areFriends(userId);
      
      // Allow updates only by the owner
      allow update: if isOwner(userId);
      
      // Users cannot be deleted
      allow delete: if false;
    }
    
    match /watchlists/{listId} {
        allow read, write: if isSignedIn() && isOwner(resource.data.userId);
    }
    
    match /recommendations/{recId} {
        // Allow creating a recommendation if you are the sender
        allow create: if isSignedIn() && isOwner(request.resource.data.fromUserId);
        
        // Allow reading a recommendation if you are the recipient
        allow read: if isSignedIn() && isOwner(resource.data.toUserId);
        
        // No one can update, recipient deletes
        allow update: if false;
        allow delete: if isSignedIn() && isOwner(resource.data.toUserId);
    }
    
    match /friendRequests/{reqId} {
        // Allow creating a request if you are the sender
        allow create: if isSignedIn() && isOwner(request.resource.data.fromUserId);
        
        // Allow reading if you are the sender or receiver
        allow read: if isSignedIn() && (isOwner(resource.data.fromUserId) || isOwner(resource.data.toUserId));
        
        // Allow deleting if you are the sender (cancel) or receiver (decline)
        allow delete: if isSignedIn() && (isOwner(resource.data.fromUserId) || isOwner(resource.data.toUserId));
        
        // No updates allowed
        allow update: if false;
    }

    match /blendRequests/{reqId} {
        // Allow creating a request if you are the sender
        allow create: if isSignedIn() && isOwner(request.resource.data.fromUserId);
        
        // Allow reading if you are the sender or receiver
        allow read: if isSignedIn() && (isOwner(resource.data.fromUserId) || isOwner(resource.data.toUserId));

        // Allow deleting if you are the sender or receiver
        allow delete: if isSignedIn() && (isOwner(resource.data.fromUserId) || isOwner(resource.data.toUserId));
        
        // No updates allowed, this is handled by the batch write in FriendManager
        allow update: if false;
    }
  }
}
