rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is signed in
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can only read and write their own profile document.
    // They can create their own profile.
    match /users/{userId} {
      allow read, update, delete: if isSignedIn() && isOwner(userId);
      allow create: if isSignedIn();
    }

    // Users can create, read, update, and delete their own watchlists.
    match /watchlists/{listId} {
      allow read, update, delete: if isSignedIn() && isOwner(resource.data.userId);
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
    }
    
    // Friend Requests
    match /friendRequests/{requestId} {
      // Users can create a request if they are the sender
      allow create: if isSignedIn() && isOwner(request.resource.data.fromUserId);
      // The recipient can read the request to see it
      allow read: if isSignedIn() && (isOwner(resource.data.fromUserId) || isOwner(resource.data.toUserId));
      // The recipient can update the status (to 'accepted'), or the sender can delete the request if it's 'accepted' by them
      allow update, delete: if isSignedIn() && (isOwner(resource.data.toUserId) || isOwner(resource.data.fromUserId));
    }
    
    // Recommendations
    match /recommendations/{recommendationId} {
      // A user can create a recommendation for a friend
      allow create: if isSignedIn() && isOwner(request.resource.data.fromUserId);
      // The recipient of the recommendation can read it
      allow read: if isSignedIn() && isOwner(resource.data.toUserId);
      // No one can update a recommendation, they can only be created and read by the recipient.
      allow update: if false;
      // The recipient can delete the recommendation after viewing it (optional, good for cleanup)
      allow delete: if isSignedIn() && isOwner(resource.data.toUserId);
    }
  }
}