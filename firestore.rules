rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can:
    // - Read their own profile
    // - Create their own profile upon signup
    // - Update their own profile (e.g., add friends, rated movies)
    // - Other signed-in users can read basic profile info (like email, uid) but not sensitive lists.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create, update: if isSignedIn() && isOwner(userId);
    }

    // Watchlists can only be created, read, updated, or deleted by their owner.
    match /watchlists/{listId} {
      allow read, create, update, delete: if isSignedIn() && request.resource.data.userId == request.auth.uid;
    }

    // Friend Requests:
    // - A user can create a request (write)
    // - A user can read requests sent to them or sent by them
    // - A user can update/delete requests sent to them (accept/decline)
    match /friendRequests/{requestId} {
      allow create: if isSignedIn();
      allow read, update, delete: if isSignedIn() && (request.resource.data.toUserId == request.auth.uid || request.resource.data.fromUserId == request.auth.uid);
    }
    
    // Recommendations:
    // - A user can create a recommendation for a friend
    // - A user can only read recommendations sent to them
    match /recommendations/{recommendationId} {
       allow create: if isSignedIn();
       allow read: if isSignedIn() && request.resource.data.toUserId == request.auth.uid;
    }
  }
}